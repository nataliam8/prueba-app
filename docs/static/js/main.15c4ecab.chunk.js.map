{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","helpers/customStyles.js","actions/ui.js","components/categories/CategoriasModal.js","components/categories/Categorias.js","components/products/ProductosModal.js","components/products/Productos.js","components/ui/Navbar.js","routers/DashboardRoutes.js","routers/AppRouter.js","ProductosApp.js","index.js"],"names":["types","initialState","modalOpen","rootReducer","combineReducers","ui","state","action","type","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","correo","password","formValues","correoValid","setCorreoValid","passwordValid","setPasswordValid","isCorreoValid","validator","isEmail","isPasswordValid","length","className","onSubmit","e","preventDefault","console","log","placeholder","autoComplete","onChange","to","RegisterScreen","nombre","password2","nombreValid","setNombreValid","PasswordValid","isNombreValid","trim","customStyles","content","top","left","right","bottom","marginRight","transform","uiOpenModal","uiCloseModal","Modal","setAppElement","CategoriasModal","useSelector","dispatch","useDispatch","descripcion","descValid","setDescValid","isDescValid","isOpen","style","closeTimeoutMS","overlayClassName","onClick","rows","Categorias","width","ProductosModal","tipo","precio","cantidad","tipoValid","setTipoValid","precioValid","setPrecioValid","cantidadValid","setCantidadValid","isTipoValid","isPrecioValid","isCantidadValid","Productos","scope","Navbar","activeClassName","exact","DashboardRoutes","path","component","AppRouter","ProductosApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15c4ecab.chunk.js","sourcesContent":["\r\n//Objeto que contiene todos los tipos de las acciones\r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n};\r\n\r\n//Reducer para la interfaz de usuario (ui)\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    \r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return { \r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return { \r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        \r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { uiReducer } from './uiReducer';\r\n\r\n//Reducer que combina todos los reducer de la app\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n\r\n    //TODO: AuthReducer\r\n});\r\n\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n//Configuración del store\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { useState } from 'react';\r\n\r\n//Hook para leer los datos de un formulario\r\nexport const useForm = ( initialState = {} ) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    };\r\n\r\n    const handleInputChange = ( {target }) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    //Obtener los datos del formulario con el hook useForm\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        correo: '',\r\n        password: '',\r\n    });\r\n\r\n    const { correo, password } = formValues;\r\n\r\n    //Variables para validar el form\r\n    const [correoValid, setCorreoValid] = useState(true);\r\n    const [passwordValid, setPasswordValid] = useState(true);\r\n\r\n    //Submit del formulario\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        // console.log( correo, password );\r\n        if( isCorreoValid() && isPasswordValid() ){\r\n            console.log('Formulario correcto')\r\n        };\r\n    };\r\n\r\n    //Validaciones del formulario\r\n    const isCorreoValid = () => {\r\n        if( !validator.isEmail(correo) ){\r\n            return setCorreoValid(false);\r\n        }\r\n        setCorreoValid(true);\r\n        return true;\r\n    }\r\n    const isPasswordValid = () => {\r\n        if ( password.length < 5){\r\n            return setPasswordValid(false);\r\n        };\r\n        setPasswordValid(true);\r\n        return true;\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            \r\n                <div className=\"login-form-1\">\r\n                    <h3>Login</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className={`form-control ${ !correoValid && 'is-invalid'}`}\r\n                                placeholder=\"Correo\"\r\n                                autoComplete=\"off\"\r\n                                name=\"correo\"\r\n                                value={ correo }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                            { !correoValid &&\r\n                                <label className=\"alert\">El correo no es válido</label>\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className={`form-control ${ !passwordValid && 'is-invalid'}`}\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"password\"\r\n                                value={ password }\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                             { !passwordValid &&\r\n                                <label className=\"alert\">La contraseña requiere al menos 5 caracteres</label>\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group centrar\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                        <Link\r\n                            to=\"/registro\"\r\n                            className=\"link1 centrar\"\r\n                        >\r\n                            Crear una nueva cuenta\r\n                        </Link>\r\n                    </form>\r\n                </div> \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    //Obtener los datos del formulario con el hook useForm\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        nombre: '',\r\n        correo: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { nombre, correo, password, password2 } = formValues;\r\n\r\n    //Variables para validar el formulario\r\n    const [nombreValid, setNombreValid] = useState(true);\r\n    const [correoValid, setCorreoValid] = useState(true);\r\n    const [PasswordValid, setPasswordValid] = useState(true);\r\n\r\n    //Submit del formulario\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if( isNombreValid() && isCorreoValid() && isPasswordValid() ){\r\n            console.log('Formulario correcto');\r\n        };\r\n    };\r\n\r\n    //Validaciones del form\r\n    const isNombreValid = () => {\r\n        if( nombre.trim().length === 0 ){\r\n            return setNombreValid(false);\r\n        };\r\n        setNombreValid(true);\r\n        return true;\r\n    };\r\n\r\n    const isCorreoValid = () => {\r\n        if( !validator.isEmail(correo) ){\r\n            return setCorreoValid(false);\r\n        }\r\n        setCorreoValid(true);\r\n        return true;\r\n    };\r\n\r\n    const isPasswordValid = () => {\r\n        if ( password !== password2 || password.length < 5){\r\n            return setPasswordValid(false);\r\n        };\r\n        setPasswordValid(true);\r\n        return true;\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"container login-container\">\r\n        <div className=\"login-form-2\">\r\n        <h3>Registro</h3>\r\n        <form onSubmit={ handleRegister }>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    className={`form-control ${ !nombreValid && 'is-invalid'}`}\r\n                    placeholder=\"Nombre\"\r\n                    autoComplete=\"off\"\r\n                    name=\"nombre\"\r\n                    value={ nombre }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                { !nombreValid &&\r\n                    <label className=\"alert2\">El nombre es requerido</label>\r\n                }\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"email\"\r\n                    className={`form-control ${ !correoValid && 'is-invalid'}`}\r\n                    placeholder=\"Correo\"\r\n                    autoComplete=\"off\"\r\n                    name=\"correo\"\r\n                    value={ correo }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                { !correoValid &&\r\n                    <label className=\"alert2\">El correo no es válido</label>\r\n                }\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"password\"\r\n                    className={`form-control ${ !PasswordValid && 'is-invalid'}`}\r\n                    placeholder=\"Contraseña\" \r\n                    name=\"password\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                { !PasswordValid &&\r\n                    <label className=\"alert2\">La contraseña requiere al menos 5 caracteres</label>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"password\"\r\n                    className={`form-control ${ !PasswordValid && 'is-invalid'}`}\r\n                    placeholder=\"Repita la contraseña\" \r\n                    name=\"password2\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange }\r\n                />\r\n                { !PasswordValid &&\r\n                    <label className=\"alert2\">La contraseña requiere al menos 5 caracteres</label>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"form-group centrar\">\r\n                <input \r\n                    type=\"submit\" \r\n                    className=\"btnSubmit\" \r\n                    value=\"Crear cuenta\" />\r\n            </div>\r\n\r\n            <Link  \r\n                    to=\"/login\"\r\n                    className=\"link2 centrar\"\r\n            >\r\n                    Ya estás registrado?\r\n            </Link>\r\n        </form>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n","\r\n//Configuracion para centrar modal\r\nexport const customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport '../../styles.css';\r\nimport '../auth/login.css';\r\nimport '../auth/login.css';\r\n\r\nimport { customStyles } from '../../helpers/customStyles';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { uiCloseModal } from '../../actions/ui';\r\n\r\n//Enlazar el modal con la app\r\nModal.setAppElement('#root');\r\n\r\nexport const CategoriasModal = () => {\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const dispatch = useDispatch();\r\n\r\n    //Obtener información del form\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        nombre: '',\r\n        descripcion: ''\r\n    });\r\n\r\n    const { nombre, descripcion } = formValues;\r\n\r\n    const [nombreValid, setNombreValid] = useState(true);\r\n    const [descValid, setDescValid] = useState(true);\r\n\r\n    //Submit del form\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( isNombreValid() && isDescValid()){\r\n            console.log('Formulario correcto');\r\n        }\r\n    };\r\n\r\n    //Validaciones del form\r\n    const isNombreValid = () => {\r\n        if( nombre.trim().length === 0 ){\r\n            return setNombreValid(false);\r\n        };\r\n        setNombreValid(true);\r\n        return true;\r\n    };\r\n\r\n    const isDescValid = () => {\r\n        if( descripcion.length < 5 ){\r\n            return setDescValid(false);\r\n        };\r\n        setDescValid(true);\r\n        return true;\r\n    };\r\n\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n    };\r\n    \r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n        //   onAfterOpen={afterOpenModal}\r\n        //  onRequestClose={closeModal}\r\n          style={ customStyles }\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal modal2\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <div className=\"row\">\r\n                <h2 className=\"col-10 centrar\"> Agregar categoría </h2>\r\n                <div className=\"col-2 right\">\r\n                    <button \r\n                        className=\"btn btn-danger btn-sm\"\r\n                        onClick={ closeModal }\r\n                    >X</button>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={ handleSubmit }>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Nombre</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !nombreValid && 'is-invalid'}`}\r\n                        placeholder=\"Nombre de la categoría\"\r\n                        name=\"nombre\"\r\n                        autoComplete=\"off\"\r\n                        value={ nombre }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"mt-0\">Descripción</label>\r\n                    <textarea\r\n                        type=\"text\" \r\n                        className={`form-control ${ !descValid && 'is-invalid'}`}\r\n                        placeholder=\"Descripción de la categoría\"\r\n                        rows=\"2\"\r\n                        name=\"descripcion\"\r\n                        value={ descripcion }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { CategoriasModal } from './CategoriasModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const Categorias = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const openModal = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <h2 className=\"col-6\">Lista de categorias </h2>\r\n                <div className=\"col-6 right\">\r\n                    <button \r\n                        className=\"btn btn-warning btn-lg right\"\r\n                        onClick={ openModal }\r\n                    >\r\n                        <i className=\"fas fa-plus\"></i> Agregar categoría\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n            <hr/>\r\n            \r\n            <div className=\"card mt-3\" style={{width: 20 + 'rem'}}>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Categoria</h5>\r\n                    <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-7\">\r\n                            <button className=\"btn btn-primary\"><i className=\"fas fa-search-plus\"></i> Ver productos</button>\r\n                        </div>\r\n                        <div className=\"col-5 right\">\r\n                            <button className=\"btn btn-success\"><i className=\"fas fa-edit\"></i></button>\r\n                            <button className=\"btn btn-danger ml-1\"><i className=\"far fa-trash-alt\"></i></button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <CategoriasModal />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport '../../styles.css';\r\nimport { customStyles } from '../../helpers/customStyles';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { uiCloseModal } from '../../actions/ui';\r\n\r\n//Enlazar el modal con la app\r\nModal.setAppElement('#root');\r\n\r\nexport const ProductosModal = () => {\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const dispatch = useDispatch();\r\n\r\n    //Obtener información del form\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        nombre: '',\r\n        tipo: '',\r\n        precio: '',\r\n        cantidad: ''\r\n    });\r\n\r\n    const { nombre, tipo, precio, cantidad } = formValues;\r\n\r\n    const [nombreValid, setNombreValid] = useState(true);\r\n    const [tipoValid, setTipoValid] = useState(true);\r\n    const [precioValid, setPrecioValid] = useState(true);\r\n    const [cantidadValid, setCantidadValid] = useState(true);\r\n\r\n    //Submit del form\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( isNombreValid() && isTipoValid() && isPrecioValid() && isCantidadValid() ){\r\n            console.log('Formulario correcto');\r\n        }\r\n    };\r\n\r\n    //Validaciones del form\r\n    const isNombreValid = () => {\r\n        if( nombre.length === 0 ){\r\n            return setNombreValid(false);\r\n        };\r\n        setNombreValid(true);\r\n        return true;\r\n    };\r\n\r\n    const isTipoValid = () => {\r\n        if( tipo.length === 0 ){\r\n            return setTipoValid(false);\r\n        };\r\n        setTipoValid(true);\r\n        return true;\r\n    };\r\n\r\n    const isPrecioValid = () => {\r\n        if( precio.length === 0 || precio < 0 ){\r\n            return setPrecioValid(false);\r\n        };\r\n        setPrecioValid(true);\r\n        return true;\r\n    };\r\n\r\n    const isCantidadValid = () => {\r\n        if( cantidad.length === 0 || cantidad < 0 ){\r\n            return setCantidadValid(false);\r\n        };\r\n        setCantidadValid(true);\r\n        return true;\r\n    };\r\n\r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n        //   onAfterOpen={afterOpenModal}\r\n        //   onRequestClose={closeModal}\r\n          style={ customStyles }\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <div className=\"row\">\r\n                <h2 className=\"col-10 centrar\"> Agregar producto </h2>\r\n                <div className=\"col-2 right\">\r\n                    <button \r\n                        className=\"btn btn-danger btn-sm\"\r\n                        onClick={ closeModal }\r\n                    >X</button>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={ handleSubmit }>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Nombre</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !nombreValid && 'is-invalid'}`}\r\n                        placeholder=\"Nombre del producto\"\r\n                        name=\"nombre\"\r\n                        autoComplete=\"off\"\r\n                        value={ nombre }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Tipo o categoría</label>\r\n                    <input\r\n                        type=\"text\" \r\n                        className={`form-control ${ !tipoValid && 'is-invalid'}`}\r\n                        placeholder=\"Categoría del producto\"\r\n                        name=\"tipo\"\r\n                        value={ tipo }\r\n                        onChange={ handleInputChange }\r\n                    ></input>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Precio</label>\r\n                    <input\r\n                        type=\"number\" \r\n                        className={`form-control ${ !precioValid && 'is-invalid'}`}\r\n                        placeholder=\"Precio del producto\"\r\n                        name=\"precio\"\r\n                        value={ precio }\r\n                        onChange={ handleInputChange }\r\n                    ></input>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Cantidad</label>\r\n                    <input\r\n                        type=\"number\" \r\n                        className={`form-control ${ !cantidadValid && 'is-invalid'}`}\r\n                        placeholder=\"Cantidad\"\r\n                        name=\"cantidad\"\r\n                        value={ cantidad }\r\n                        onChange={ handleInputChange }\r\n                    ></input>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { ProductosModal } from './ProductosModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const Productos = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const openModal = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <h2 className=\"col-6\">Lista de productos </h2>\r\n                <div className=\"col-6 right\">\r\n                    <button \r\n                        className=\"btn btn-warning btn-lg right\"\r\n                        onClick={ openModal }\r\n                    >\r\n                        <i className=\"fas fa-plus\"></i> Agregar producto\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n            <hr/>\r\n\r\n            <table className=\"table\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Nombre</th>\r\n                    <th scope=\"col\">Tipo</th>\r\n                    <th scope=\"col\">Precio</th>\r\n                    <th scope=\"col\">Cantidad</th>\r\n                    <th scope=\"col\">Tools</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>Televisor</td>\r\n                        <td>Electrodoméstico</td>\r\n                        <td>1000000</td>\r\n                        <td>100</td>\r\n                        <td>\r\n                            <button className=\"btn btn-success\"><i className=\"fas fa-edit\"></i></button>\r\n                            <button className=\"btn btn-danger ml-1\"><i className=\"far fa-trash-alt\"></i></button>\r\n                        </td>\r\n\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">2</th>\r\n                        <td>Papel Higinieco</td>\r\n                        <td>Aseo</td>\r\n                        <td>10000</td>\r\n                        <td>100</td>\r\n                        <td>\r\n                            <button className=\"btn btn-success\"><i className=\"fas fa-edit\"></i></button>\r\n                            <button className=\"btn btn-danger ml-1\"><i className=\"far fa-trash-alt\"></i></button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">3</th>\r\n                        <td>Arroz</td>\r\n                        <td>Abarrotes</td>\r\n                        <td>30000</td>\r\n                        <td>100</td>\r\n                        <td>\r\n                            <button className=\"btn btn-success\"><i className=\"fas fa-edit\"></i></button>\r\n                            <button className=\"btn btn-danger ml-1\"><i className=\"far fa-trash-alt\"></i></button>\r\n                        </td>\r\n                    </tr>\r\n                    \r\n                </tbody>\r\n            </table>\r\n\r\n            <ProductosModal />\r\n        </div>    \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n\r\n    return(\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n   \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                ProductosApp\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/categorias\"\r\n                    >\r\n                        Categorías\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/productos\"\r\n                    >\r\n                        Productos\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <span className=\"nav-item nav-link text-info\"> Natalia </span>\r\n\r\n                    <button className=\"btn btn-outline-danger\">\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                        <span> Salir</span>\r\n                    </button>\r\n                        \r\n                </ul>\r\n            </div>\r\n        </nav>\r\n)\r\n    \r\n}","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Categorias } from '../components/categories/Categorias';\r\nimport { Productos } from '../components/products/Productos';\r\nimport { Navbar } from '../components/ui/Navbar';\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n\r\n            <div className=\"auth__main\">\r\n                <div className=\"auth__box-container\">\r\n                    <Switch>\r\n                        <Route exact path=\"/productos\" component={ Productos }/>\r\n                        <Route exact path=\"/categorias\" component={ Categorias }/>\r\n\r\n                        <Redirect to=\"/categorias\"/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>     \r\n    )\r\n}","import React from 'react';\r\nimport { \r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect, Route\r\n} from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    return(\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route\r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen }\r\n                    />\r\n\r\n                    <Route\r\n                        exact \r\n                        path=\"/registro\" \r\n                        component={ RegisterScreen }\r\n                    />\r\n\r\n                    <Route\r\n                        path=\"/\" \r\n                        component={ DashboardRoutes }\r\n                    \r\n                    />\r\n                    \r\n                    <Redirect to=\"/login\"/>    \r\n\r\n                </Switch>\r\n            </div>\r\n\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const ProductosApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ProductosApp } from './ProductosApp';\n\nReactDOM.render(\n    <ProductosApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}